# 2023-11-18 23:00
name: act - Build

on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:
    inputs:
      msbuild_cl_x64_release:
        default: true
        type: boolean
#      msbuild_cl_x86_release:
#        default: false
#        type: boolean

env:
  PROG_NAME: "TempTopMostWindow"
  TAG_NAME: "TempTopMostWindow-release"
  VERSION: "0.3"

jobs:
#------------------------------------------------------------------------------
  build-msbuild:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build: [ 
#                 msbuild_cl_x64_debug,
                 msbuild_cl_x64_release,
               ]
  
        include:
#          - { build: msbuild_cl_x64_debug,     compiler: msbuild_cl, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Debug }
          - { build: msbuild_cl_x64_release,   compiler: msbuild_cl, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Release }
#          - { build: msbuild_cl_x86_debug,     compiler: msbuild_cl, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Debug }
#          - { build: msbuild_cl_x86_release,   compiler: msbuild_cl, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Release }

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v3

      - name: Set MSVC environment
        uses: deep-soft/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Set environment for debug build
        if: matrix.build_config  == 'Debug'
        run: Add-Content -Path $env:GITHUB_ENV -Value "DEBUG=1"

      - name: Build (cl)
        working-directory: .
        run: |
          msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} TempTopMostWindow.sln

#       - name: Create zip
#         continue-on-error: true
#         working-directory: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}
#         run: |
#           dir ./
#           Compress-Archive . ../Far.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip
#           dir ../

      - name: Create Zip Archive Release
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PROG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip'
          directory: '${{ matrix.platform_sln }}/${{ matrix.build_config }}'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb changelog'
          path: '.'

      - name: MD5 for Zip Archive
        uses: deep-soft/sha-checksums@v1
        with:
          type: 'md5'
          filename: '${{ env.PROG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip.md5'
          directory: '${{ matrix.platform_sln }}/${{ matrix.build_config }}'
          path: '${{ env.PROG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip'
          ignore_git: true
          # output env.SHA_SUMS

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.PROG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
#          files: |
#            ${{ env.LIST_File }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.SHA_SUMS }}

      - name: Prepare latest Release
        continue-on-error: false
        shell: bash
        run: |
          mv ${{ env.ZIP_RELEASE_ARCHIVE }} ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip
          mv ${{ env.SHA_SUMS }} ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip.md5
          echo "${{ env.VERSION }}" > ${{ env.PROG_NAME }}-latest.txt

      - name: Publish latest Release
        continue-on-error: false
        uses: deep-soft/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ env.PROG_NAME }}-latest
          body: "${{ env.PROG_NAME }} latest: v${{ env.VERSION }}"
          files: |
            ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip
            ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip.md5
            ${{ env.PROG_NAME }}-latest.txt
